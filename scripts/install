#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

email=$(ynh_user_get_info --username=$admin --key=mail)

#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_nodejs_install

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

# Download, check integrity, uncompress and patch the source from app.src
mkdir -p $install_dir

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:www-data "$install_dir"
#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression "Configuring NGINX web server..."

# Create a dedicated NGINX config
ynh_config_add_nginx

env_path="$PATH"
# Create a dedicated systemd config
ynh_config_add_systemd

yunohost service add $app --description="Workflow Automation Tool" --log="/var/log/$app/$app.log"

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration..."

ynh_config_add --template=".env" --destination="$install_dir/.env"

#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 400 "$install_dir/.env"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown $app:$app "$install_dir/.env"

#=================================================
# INSTALL n8n
#=================================================
ynh_script_progression "Installing $app..."

pushd $install_dir

	ynh_hide_warnings ynh_exec_as_app npm install n8n@$(ynh_app_upstream_version)
	ynh_replace  --match="secure: config_1.default.getEnv('userManagement.emails.smtp.secure'),$" \
	                    --replace="secure: config_1.default.getEnv('userManagement.emails.smtp.secure'), tls: {servername:'${main_domain}'}," \
	                    --file="node_modules/n8n/dist/UserManagement/email/NodeMailer.js"
popd

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:www-data "$install_dir"
#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service=$app --action=restart --log_path=systemd --wait_until="Editor is now accessible via:"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
